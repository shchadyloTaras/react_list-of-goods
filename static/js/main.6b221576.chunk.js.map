{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goods","isActive","startButton","setState","reverseElement","prevState","reverse","sortAlph","sort","a","b","reset","sortByLength","length","this","className","type","onClick","map","good","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAkGaC,E,4MA9FbC,MAAQ,CACNC,MAAOH,EACPI,UAAU,G,EAGZC,YAAc,WACZ,EAAKC,SAAS,CACZF,UAAU,K,EAIdG,eAAiB,WACf,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOM,e,EAIhCC,SAAW,WACT,EAAKJ,UAAS,SAAAE,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOQ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,GAAK,EAAI,U,EAI7DC,MAAQ,WACN,EAAKR,SAAS,CAAEH,MAAOH,K,EAGzBe,aAAe,WACb,EAAKT,UAAS,SAAAE,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOQ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEG,e,4CAI7D,WACE,IAAQb,EAAUc,KAAKf,MAAfC,MAER,OACE,yBAAKe,UAAU,OACb,yBAAKA,UAAU,aACb,4BACEC,KAAK,SACLD,UAAU,YACVE,QAASH,KAAKZ,aAHhB,SAQCY,KAAKf,MAAME,SAER,yBAAKc,UAAU,WACb,sCACA,4BACGf,EAAMkB,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GACNA,OAIP,yBAAKJ,UAAU,WACb,4BACEC,KAAK,SACLC,QAASH,KAAKV,gBAFhB,WAMA,4BACEY,KAAK,SACLC,QAASH,KAAKP,UAFhB,uBAMA,4BACES,KAAK,SACLC,QAASH,KAAKH,OAFhB,SAMA,4BACEK,KAAK,SACLC,QAASH,KAAKF,cAFhB,oBASJ,W,GAvFIS,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6b221576.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    isActive: false,\n  }\n\n  startButton = () => {\n    this.setState({\n      isActive: true,\n    });\n  }\n\n  reverseElement = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortAlph = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => (a < b ? -1 : 1)),\n    }));\n  }\n\n  reset = () => {\n    this.setState({ goods: goodsFromServer });\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => (a.length - b.length)),\n    }));\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <button\n            type=\"button\"\n            className=\"btn-start\"\n            onClick={this.startButton}\n          >\n            Start\n          </button>\n\n          {this.state.isActive\n            ? (\n              <div className=\"content\">\n                <h1>Goods:</h1>\n                <ul>\n                  {goods.map(good => (\n                    <li key={good}>\n                      {good}\n                    </li>\n                  ))}\n                </ul>\n                <div className=\"buttons\">\n                  <button\n                    type=\"button\"\n                    onClick={this.reverseElement}\n                  >\n                    Reverse\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={this.sortAlph}\n                  >\n                    Sort alphabetically\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={this.reset}\n                  >\n                    Reset\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={this.sortByLength}\n                  >\n                    Sort by length\n                  </button>\n                </div>\n              </div>\n            )\n            : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}